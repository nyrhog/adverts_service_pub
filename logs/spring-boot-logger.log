2021-06-15 14:16:10,241 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 14:16:10,245 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 840 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 14:16:10,246 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 14:16:10,246 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 14:16:11,340 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 14:16:11,430 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 81 ms. Found 10 JPA repository interfaces.
2021-06-15 14:16:11,714 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@761e788f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 14:16:11,717 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 14:16:11,934 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 14:16:11,943 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 14:16:11,943 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 14:16:11,943 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 14:16:12,021 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 14:16:12,021 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1736 ms
2021-06-15 14:16:12,161 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 14:16:12,210 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 14:16:12,343 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 14:16:12,480 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 14:16:13,093 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 14:16:13,104 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 14:16:13,904 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 14:16:13,911 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 14:16:14,467 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 14:16:14,662 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 14:16:14,879 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73c1dda3, org.springframework.security.web.context.SecurityContextPersistenceFilter@6d40a2b, org.springframework.security.web.header.HeaderWriterFilter@3a574a3b, org.springframework.security.web.authentication.logout.LogoutFilter@62977afb, com.project.jwt.JwtTokenFilter@c3c63c1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49faf815, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aca2a0b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e75cf7a, org.springframework.security.web.session.SessionManagementFilter@6344004d, org.springframework.security.web.access.ExceptionTranslationFilter@2dc319cf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3cfab56d]
2021-06-15 14:16:14,903 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 14:16:14,919 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 14:16:14,925 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 5.021 seconds (JVM running for 5.685)
2021-06-15 14:17:43,398 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 14:17:43,398 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2021-06-15 14:17:43,399 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2021-06-15 14:17:43,772 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-1] SQL Error: 1062, SQLState: 23000
2021-06-15 14:17:43,772 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-1] Duplicate entry 'test22222@gmail.com' for key 'users.UK_6dotkott2kjsp8vw4d0m25fb7'
2021-06-15 14:17:43,785 ERROR com.project.exceptionHandler.ExceptionHandlerClass [http-nio-8080-exec-1] could not execute statement; SQL [n/a]; constraint [users.UK_6dotkott2kjsp8vw4d0m25fb7]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2021-06-15 14:17:51,609 INFO com.project.service.UserService [http-nio-8080-exec-9] IN register - user: nyrhog9 successfully registered
2021-06-15 14:57:06,313 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 14:57:06,323 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 1016 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 14:57:06,323 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 14:57:06,323 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 14:57:06,923 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 14:57:06,999 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 69 ms. Found 10 JPA repository interfaces.
2021-06-15 14:57:07,222 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5b3a7ef5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 14:57:07,225 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 14:57:07,389 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 14:57:07,402 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 14:57:07,403 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 14:57:07,403 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 14:57:07,475 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 14:57:07,476 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1118 ms
2021-06-15 14:57:07,586 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 14:57:07,619 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 14:57:07,702 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 14:57:07,779 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 14:57:07,979 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 14:57:07,988 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 14:57:08,657 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 14:57:08,665 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 14:57:09,159 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 14:57:09,354 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 14:57:09,551 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@211cf27b, org.springframework.security.web.context.SecurityContextPersistenceFilter@5418893c, org.springframework.security.web.header.HeaderWriterFilter@1ec09a68, org.springframework.security.web.authentication.logout.LogoutFilter@b4c89b6, com.project.jwt.JwtTokenFilter@4e0139, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22bca04e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37b44e8e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e4b9592, org.springframework.security.web.session.SessionManagementFilter@3a574a3b, org.springframework.security.web.access.ExceptionTranslationFilter@1e12fdcf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@751b901a]
2021-06-15 14:57:09,574 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 14:57:09,588 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 14:57:09,595 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 3.516 seconds (JVM running for 3.976)
2021-06-15 14:57:21,773 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 14:57:21,773 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2021-06-15 14:57:21,774 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 0 ms
2021-06-15 14:57:21,934 ERROR com.project.exceptionHandler.ExceptionHandlerClass [http-nio-8080-exec-1] Username is already used
2021-06-15 14:57:27,223 ERROR com.project.exceptionHandler.ExceptionHandlerClass [http-nio-8080-exec-4] Email is already used
2021-06-15 15:15:13,342 INFO com.project.service.UserService [http-nio-8080-exec-6] Password restored
2021-06-15 15:15:34,820 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-8] IN loadUserByUsername - user with username: nyrhog3 successfully loaded
2021-06-15 15:21:40,760 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-2] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:21:40,803 INFO com.project.service.AdvertService [http-nio-8080-exec-2] Advert was got with id: 6
2021-06-15 15:22:05,446 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-1] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:22:05,467 ERROR com.project.exceptionHandler.ExceptionHandlerClass [http-nio-8080-exec-1] Validation failed for argument [0] in public org.springframework.http.ResponseEntity<java.lang.Void> com.project.controller.AdvertController.addComment(com.project.dto.CommentaryDto): [Field error in object 'commentaryDto' on field 'username': rejected value [null]; codes [NotBlank.commentaryDto.username,NotBlank.username,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [commentaryDto.username,username]; arguments []; default message [username]]; default message [не должно быть пустым]] 
2021-06-15 15:23:45,807 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 14696 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 15:23:45,809 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 15:23:45,809 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 15:23:45,816 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 15:23:46,288 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 15:23:46,347 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 53 ms. Found 10 JPA repository interfaces.
2021-06-15 15:23:46,537 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@17f2dd85' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:23:46,539 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:23:46,683 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 15:23:46,689 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 15:23:46,689 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 15:23:46,690 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 15:23:46,767 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 15:23:46,767 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 929 ms
2021-06-15 15:23:46,875 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 15:23:46,910 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 15:23:46,987 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 15:23:47,054 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 15:23:47,228 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 15:23:47,236 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 15:23:47,834 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 15:23:47,840 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 15:23:48,292 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 15:23:48,469 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 15:23:48,636 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@470ad01c, org.springframework.security.web.context.SecurityContextPersistenceFilter@5f596a1a, org.springframework.security.web.header.HeaderWriterFilter@225fb75e, org.springframework.security.web.authentication.logout.LogoutFilter@1e4b9592, com.project.jwt.JwtTokenFilter@6e349258, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13edc1bc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2446be5f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41092c8, org.springframework.security.web.session.SessionManagementFilter@222a7429, org.springframework.security.web.access.ExceptionTranslationFilter@397bd46b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@38318d67]
2021-06-15 15:23:48,658 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 15:23:48,670 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 15:23:48,677 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 3.076 seconds (JVM running for 3.567)
2021-06-15 15:23:55,155 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 15:23:55,155 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2021-06-15 15:23:55,156 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 0 ms
2021-06-15 15:23:55,260 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-2] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:23:55,386 INFO com.project.service.AdvertService [http-nio-8080-exec-2] Commentary was added
2021-06-15 15:24:02,077 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-3] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:24:02,093 INFO com.project.service.AdvertService [http-nio-8080-exec-3] Advert was got with id: 6
2021-06-15 15:28:35,634 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 15:28:35,639 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 10520 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 15:28:35,639 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 15:28:35,640 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 15:28:36,665 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 15:28:36,773 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 98 ms. Found 10 JPA repository interfaces.
2021-06-15 15:28:37,023 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@22587507' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:28:37,026 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:28:37,185 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 15:28:37,192 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 15:28:37,192 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 15:28:37,192 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 15:28:37,260 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 15:28:37,261 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1585 ms
2021-06-15 15:28:37,365 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 15:28:37,395 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 15:28:37,479 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 15:28:37,546 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 15:28:37,716 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 15:28:37,724 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 15:28:38,412 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 15:28:38,418 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 15:28:38,923 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 15:28:39,117 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 15:28:39,298 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70b0dc92, org.springframework.security.web.context.SecurityContextPersistenceFilter@2cdb53d6, org.springframework.security.web.header.HeaderWriterFilter@37b44e8e, org.springframework.security.web.authentication.logout.LogoutFilter@5ae67f05, com.project.jwt.JwtTokenFilter@309d54ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@397bd46b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b4c89b6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@390978, org.springframework.security.web.session.SessionManagementFilter@aca2a0b, org.springframework.security.web.access.ExceptionTranslationFilter@436d2bb9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7d0e43d6]
2021-06-15 15:28:39,326 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 15:28:39,339 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 15:28:39,345 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 4.218 seconds (JVM running for 4.86)
2021-06-15 15:29:13,101 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 15:29:13,101 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-4] Initializing Servlet 'dispatcherServlet'
2021-06-15 15:29:13,102 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-4] Completed initialization in 1 ms
2021-06-15 15:29:13,220 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-4] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:29:13,261 INFO com.project.service.AdvertService [http-nio-8080-exec-4] Advert was got with id: 6
2021-06-15 15:29:13,404 ERROR com.project.exceptionHandler.ExceptionHandlerClass [http-nio-8080-exec-4] Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"]->org.hibernate.collection.internal.PersistentBag[0]->com.project.entity.Category["mainCategory"]->com.project.entity.Category["categories"])
2021-06-15 15:29:33,751 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 15:29:33,763 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 2220 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 15:29:33,764 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 15:29:33,766 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 15:29:34,382 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 15:29:34,454 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 67 ms. Found 10 JPA repository interfaces.
2021-06-15 15:29:34,661 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1dba4e06' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:29:34,664 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:29:34,824 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 15:29:34,830 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 15:29:34,830 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 15:29:34,830 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 15:29:34,903 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 15:29:34,903 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1053 ms
2021-06-15 15:29:35,014 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 15:29:35,051 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 15:29:35,136 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 15:29:35,213 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 15:29:35,386 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 15:29:35,395 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 15:29:36,076 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 15:29:36,083 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 15:29:36,562 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 15:29:36,757 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 15:29:36,948 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70680f88, org.springframework.security.web.context.SecurityContextPersistenceFilter@aca2a0b, org.springframework.security.web.header.HeaderWriterFilter@20276412, org.springframework.security.web.authentication.logout.LogoutFilter@2d4f1ddd, com.project.jwt.JwtTokenFilter@7f7f544a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2cdb53d6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61d9dd15, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70b0dc92, org.springframework.security.web.session.SessionManagementFilter@7945986a, org.springframework.security.web.access.ExceptionTranslationFilter@20608ef4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f12fca0]
2021-06-15 15:29:36,972 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 15:29:36,985 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 15:29:36,991 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 3.713 seconds (JVM running for 4.42)
2021-06-15 15:29:39,205 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 15:29:39,206 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Initializing Servlet 'dispatcherServlet'
2021-06-15 15:29:39,206 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Completed initialization in 0 ms
2021-06-15 15:29:39,330 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-3] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:29:39,381 INFO com.project.service.AdvertService [http-nio-8080-exec-3] Advert was got with id: 6
2021-06-15 15:33:33,970 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 15:33:33,974 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 13144 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 15:33:33,975 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 15:33:33,975 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 15:33:34,725 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 15:33:34,803 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 71 ms. Found 10 JPA repository interfaces.
2021-06-15 15:33:35,118 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2af69643' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:33:35,121 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:33:35,296 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 15:33:35,302 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 15:33:35,302 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 15:33:35,302 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 15:33:35,375 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 15:33:35,376 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1360 ms
2021-06-15 15:33:35,485 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 15:33:35,516 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 15:33:35,601 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 15:33:35,668 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 15:33:35,861 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 15:33:35,870 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 15:33:36,559 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 15:33:36,566 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 15:33:37,042 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 15:33:37,237 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 15:33:37,424 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7343d843, org.springframework.security.web.context.SecurityContextPersistenceFilter@76ebd595, org.springframework.security.web.header.HeaderWriterFilter@7611e295, org.springframework.security.web.authentication.logout.LogoutFilter@6892d403, com.project.jwt.JwtTokenFilter@29a1dab3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@225fb75e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a906078, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@619b7436, org.springframework.security.web.session.SessionManagementFilter@397bd46b, org.springframework.security.web.access.ExceptionTranslationFilter@37b44e8e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70680f88]
2021-06-15 15:33:37,447 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 15:33:37,461 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 15:33:37,467 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 3.928 seconds (JVM running for 4.553)
2021-06-15 15:33:40,102 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 15:33:40,102 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Initializing Servlet 'dispatcherServlet'
2021-06-15 15:33:40,104 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Completed initialization in 2 ms
2021-06-15 15:33:40,222 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-3] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:33:40,270 INFO com.project.service.AdvertService [http-nio-8080-exec-3] Advert was got with id: 6
2021-06-15 15:36:08,538 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 7116 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 15:36:08,540 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 15:36:08,541 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 15:36:08,544 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 15:36:09,129 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 15:36:09,189 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 54 ms. Found 10 JPA repository interfaces.
2021-06-15 15:36:09,372 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@261ea657' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:36:09,375 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:36:09,523 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 15:36:09,529 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 15:36:09,529 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 15:36:09,529 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 15:36:09,599 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 15:36:09,599 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1008 ms
2021-06-15 15:36:09,706 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 15:36:09,737 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 15:36:09,816 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 15:36:09,880 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 15:36:10,046 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 15:36:10,054 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 15:36:10,651 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 15:36:10,658 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 15:36:11,089 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 15:36:11,262 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 15:36:11,428 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39007725, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ef7fb04, org.springframework.security.web.header.HeaderWriterFilter@fd5c7f6, org.springframework.security.web.authentication.logout.LogoutFilter@51d34f02, com.project.jwt.JwtTokenFilter@3eb8057c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2d4f1ddd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3fb42ec7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@be186df, org.springframework.security.web.session.SessionManagementFilter@4779df3d, org.springframework.security.web.access.ExceptionTranslationFilter@54f62ac6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@41092c8]
2021-06-15 15:36:11,449 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 15:36:11,467 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 15:36:11,472 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 3.245 seconds (JVM running for 3.762)
2021-06-15 15:36:14,925 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 15:36:14,925 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Initializing Servlet 'dispatcherServlet'
2021-06-15 15:36:14,926 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Completed initialization in 1 ms
2021-06-15 15:36:15,021 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-3] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:36:15,058 INFO com.project.service.AdvertService [http-nio-8080-exec-3] Advert was got with id: 6
2021-06-15 15:37:40,078 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 16364 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 15:37:40,080 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 15:37:40,081 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 15:37:40,083 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 15:37:40,665 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 15:37:40,740 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 69 ms. Found 10 JPA repository interfaces.
2021-06-15 15:37:40,940 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@17f2dd85' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:37:40,945 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:37:41,079 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 15:37:41,085 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 15:37:41,086 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 15:37:41,086 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 15:37:41,158 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 15:37:41,158 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1046 ms
2021-06-15 15:37:41,257 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 15:37:41,285 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 15:37:41,362 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 15:37:41,426 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 15:37:41,584 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 15:37:41,592 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 15:37:42,183 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 15:37:42,189 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 15:37:42,615 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 15:37:42,786 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 15:37:42,956 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e590e36, org.springframework.security.web.context.SecurityContextPersistenceFilter@77604a86, org.springframework.security.web.header.HeaderWriterFilter@b4c89b6, org.springframework.security.web.authentication.logout.LogoutFilter@75f446df, com.project.jwt.JwtTokenFilter@3fc2a1d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a6409ec, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ae67f05, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@752e4223, org.springframework.security.web.session.SessionManagementFilter@62977afb, org.springframework.security.web.access.ExceptionTranslationFilter@4560eb15, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@497c1d78]
2021-06-15 15:37:42,977 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 15:37:42,989 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 15:37:42,995 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 3.183 seconds (JVM running for 3.704)
2021-06-15 15:37:45,373 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 15:37:45,373 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Initializing Servlet 'dispatcherServlet'
2021-06-15 15:37:45,375 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Completed initialization in 2 ms
2021-06-15 15:37:45,474 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-3] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:37:45,513 INFO com.project.service.AdvertService [http-nio-8080-exec-3] Advert was got with id: 6
2021-06-15 15:38:02,401 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 2308 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 15:38:02,403 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 15:38:02,404 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 15:38:02,530 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 15:38:02,936 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 15:38:02,995 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 53 ms. Found 10 JPA repository interfaces.
2021-06-15 15:38:03,177 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7add323c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:38:03,180 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 15:38:03,323 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 15:38:03,329 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 15:38:03,329 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 15:38:03,329 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 15:38:03,396 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 15:38:03,396 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 958 ms
2021-06-15 15:38:03,499 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 15:38:03,526 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 15:38:03,599 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 15:38:03,663 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 15:38:03,827 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 15:38:03,835 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 15:38:04,461 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 15:38:04,469 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 15:38:04,926 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 15:38:05,106 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 15:38:05,276 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27e656e6, org.springframework.security.web.context.SecurityContextPersistenceFilter@20276412, org.springframework.security.web.header.HeaderWriterFilter@4b5ceb5d, org.springframework.security.web.authentication.logout.LogoutFilter@40ef1934, com.project.jwt.JwtTokenFilter@3cfab56d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37b44e8e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@49faf815, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b6fde93, org.springframework.security.web.session.SessionManagementFilter@436d2bb9, org.springframework.security.web.access.ExceptionTranslationFilter@46df794e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e0139]
2021-06-15 15:38:05,296 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 15:38:05,309 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 15:38:05,314 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 3.366 seconds (JVM running for 3.905)
2021-06-15 15:38:08,837 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 15:38:08,837 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Initializing Servlet 'dispatcherServlet'
2021-06-15 15:38:08,838 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Completed initialization in 0 ms
2021-06-15 15:38:08,933 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-3] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:38:08,973 INFO com.project.service.AdvertService [http-nio-8080-exec-3] Advert was got with id: 6
2021-06-15 15:39:12,607 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-5] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 15:39:12,619 INFO com.project.service.AdvertService [http-nio-8080-exec-5] Expired premiums was deactivated
2021-06-15 15:39:12,656 INFO com.project.service.AdvertService [http-nio-8080-exec-5] Adverts was taken
2021-06-15 18:09:15,660 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 18:09:15,662 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 9348 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 18:09:15,663 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 18:09:15,663 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 18:09:16,523 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 18:09:16,666 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 134 ms. Found 10 JPA repository interfaces.
2021-06-15 18:09:16,896 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@767191b1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 18:09:16,899 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 18:09:17,041 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 18:09:17,047 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 18:09:17,047 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 18:09:17,047 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 18:09:17,115 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 18:09:17,115 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1422 ms
2021-06-15 18:09:17,218 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 18:09:17,251 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 18:09:17,327 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 18:09:17,389 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 18:09:17,551 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 18:09:17,560 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 18:09:18,130 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 18:09:18,136 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 18:09:18,557 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 18:09:18,729 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 18:09:18,917 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2446be5f, org.springframework.security.web.context.SecurityContextPersistenceFilter@765eb801, org.springframework.security.web.header.HeaderWriterFilter@74267ece, org.springframework.security.web.authentication.logout.LogoutFilter@a70daf4, com.project.jwt.JwtTokenFilter@2d4f1ddd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7bdddfa4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e5c8c80, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b4880b3, org.springframework.security.web.session.SessionManagementFilter@70ab1ce0, org.springframework.security.web.access.ExceptionTranslationFilter@5cb32140, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@77604a86]
2021-06-15 18:09:18,946 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 18:09:18,960 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 18:09:18,967 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 3.531 seconds (JVM running for 3.97)
2021-06-15 18:14:57,654 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 5420 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 18:14:57,655 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 18:14:57,656 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 18:14:57,658 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 18:14:58,494 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 18:14:58,612 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 109 ms. Found 10 JPA repository interfaces.
2021-06-15 18:14:58,893 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3374b5bc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 18:14:58,898 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 18:14:59,057 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 18:14:59,063 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 18:14:59,064 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 18:14:59,064 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 18:14:59,136 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 18:14:59,136 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1403 ms
2021-06-15 18:14:59,240 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 18:14:59,270 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 18:14:59,347 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 18:14:59,411 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 18:14:59,596 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 18:14:59,606 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 18:15:00,173 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 18:15:00,179 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 18:15:00,600 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 18:15:00,770 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 18:15:00,931 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3eb8057c, org.springframework.security.web.context.SecurityContextPersistenceFilter@2446be5f, org.springframework.security.web.header.HeaderWriterFilter@3724ab90, org.springframework.security.web.authentication.logout.LogoutFilter@441762b8, com.project.jwt.JwtTokenFilter@be186df, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b4880b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1f7b1d6a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c257c0a, org.springframework.security.web.session.SessionManagementFilter@32b8992e, org.springframework.security.web.access.ExceptionTranslationFilter@7be86438, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e590e36]
2021-06-15 18:15:00,956 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 18:15:00,968 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 18:15:00,973 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 3.594 seconds (JVM running for 4.166)
2021-06-15 18:15:47,219 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 18:15:47,219 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2021-06-15 18:15:47,220 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 1 ms
2021-06-15 18:15:47,310 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-2] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 18:15:47,349 INFO com.project.service.AdvertService [http-nio-8080-exec-2] Selling history was taking
2021-06-15 18:16:21,697 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-3] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 18:16:21,751 ERROR com.project.exceptionHandler.ExceptionHandlerClass [http-nio-8080-exec-3] Validation failed for argument [0] in public org.springframework.http.ResponseEntity<java.lang.Void> com.project.controller.ProfileController.rateProfile(com.project.dto.RateDto): [Field error in object 'rateDto' on field 'username': rejected value [null]; codes [NotBlank.rateDto.username,NotBlank.username,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [rateDto.username,username]; arguments []; default message [username]]; default message [не должно быть пустым]] 
2021-06-15 18:19:22,836 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2021-06-15 18:19:22,838 INFO org.springframework.boot.StartupInfoLogger [main] Starting AdvertsServiceApplication using Java 15 on DESKTOP-GK0HJTR with PID 16848 (D:\Projects\adverts_services\controller\build\classes\java\main started by ejik_ in D:\Projects\adverts_services)
2021-06-15 18:19:22,839 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.4.5, Spring v5.3.6
2021-06-15 18:19:22,839 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-06-15 18:19:23,312 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-06-15 18:19:23,370 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 53 ms. Found 10 JPA repository interfaces.
2021-06-15 18:19:23,553 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3374b5bc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 18:19:23,556 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-15 18:19:23,692 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-06-15 18:19:23,697 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-06-15 18:19:23,698 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-06-15 18:19:23,698 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-06-15 18:19:23,765 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-06-15 18:19:23,766 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 900 ms
2021-06-15 18:19:23,868 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-06-15 18:19:23,901 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.4.30.Final
2021-06-15 18:19:23,974 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-06-15 18:19:24,036 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-06-15 18:19:24,197 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-06-15 18:19:24,205 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2021-06-15 18:19:24,782 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-15 18:19:24,788 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-06-15 18:19:25,205 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-06-15 18:19:25,375 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-06-15 18:19:25,536 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@309d54ac, org.springframework.security.web.context.SecurityContextPersistenceFilter@aca2a0b, org.springframework.security.web.header.HeaderWriterFilter@20276412, org.springframework.security.web.authentication.logout.LogoutFilter@2d4f1ddd, com.project.jwt.JwtTokenFilter@390978, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2cdb53d6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61d9dd15, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@561c031, org.springframework.security.web.session.SessionManagementFilter@7945986a, org.springframework.security.web.access.ExceptionTranslationFilter@20608ef4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@df04d12]
2021-06-15 18:19:25,557 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-06-15 18:19:25,569 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2021-06-15 18:19:25,574 INFO org.springframework.boot.StartupInfoLogger [main] Started AdvertsServiceApplication in 2.948 seconds (JVM running for 3.346)
2021-06-15 18:19:29,030 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-06-15 18:19:29,030 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Initializing Servlet 'dispatcherServlet'
2021-06-15 18:19:29,031 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Completed initialization in 1 ms
2021-06-15 18:19:29,119 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-3] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 18:19:35,305 INFO com.project.JwtUserDetailsService [http-nio-8080-exec-6] IN loadUserByUsername - user with username: nyrhog successfully loaded
2021-06-15 18:19:35,326 INFO com.project.service.AdvertService [http-nio-8080-exec-6] Selling history was taking
